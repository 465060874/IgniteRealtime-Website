<?xml version="1.0"?>

<!--
    Build Requirements:

        * Ant 1.6 or higher (including optional tasks)
-->

<project name="igniterealtime.org Site" default="war" basedir="..">

    <property file="${basedir}/build/build.properties" />
    <property name="web.dir" value="${basedir}/src/web" />
    <property name="build.lib.dir" value="${basedir}/build/lib" />
    <property name="war.name" value="site.war" />
    <property name="src.java.dir" value="${basedir}/src/java" />
    <property name="target.dir" value="${basedir}/target" />
    <property name="jspc.dest.dir" value="${target.dir}/jspc" />
    <property name="jspc.java.dest.dir" value="${target.dir}/jspc/java" />
    <property name="jspc.classes.dest.dir" value="${target.dir}/jspc/classes" />
    <property name="jspc.jar.name" value="admin-jsp.jar" />
    <property name="deploy.dir" value="${target.dir}/deploy" />
    <property name="target.classes.dir" value="${deploy.dir}/WEB-INF/classes" />
    <property name="jive.home.src" value="${basedir}/resources/jiveHome" />
    <property name="wsdl.cs.compile" value="${target.dir}/cs-wsdl"/>
    <property name="wsdl.cs.path" value="${basedir}/resources/wsdl"/>
    <property name="wsdl.cs.jar.name" value="jive-wsdl-cs"/>

    <path id="dependencies">
        <fileset dir="${build.lib.dir}" includes="*.jar" />
        <fileset dir="${web.dir}/WEB-INF/lib" includes="*.jar" />
    </path>
    <path id="jspc.dependencies">
        <path refid="dependencies" />
        <pathelement path="${target.classes.dir}" />
    </path>
    <path id="wsdl.cs">
        <path refid="dependencies" />
        <pathelement path="${wsdl.cs.compile}"/>
    </path>

    <!-- init ================================================================================== -->
    <target name="init">
        <mkdir dir="${target.dir}" />
        <mkdir dir="${wsdl.cs.compile}" />
    </target>

    <!--
    // this was replaced by an SBS client WS jar generated in custom SBS build...
    <target name="wsdl-clearspace" depends="init" description="Generates Clearspace code from the WSDL files">
        <java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
            <arg value="-client"/>
            <arg value="-d"/>
            <arg value="${wsdl.cs.compile}"/>
            <arg value="${wsdl.cs.path}/BlogService.wsdl"/>
            <classpath>
                <path refid="dependencies"/>
            </classpath>
        </java>
        <java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
            <arg value="-client"/>
            <arg value="-d"/>
            <arg value="${wsdl.cs.compile}"/>
            <arg value="${wsdl.cs.path}/ForumService.wsdl"/>
            <classpath>
                <path refid="dependencies"/>
            </classpath>
        </java>
        <java classname="org.apache.cxf.tools.wsdlto.WSDLToJava" fork="true">
            <arg value="-client"/>
            <arg value="-d"/>
            <arg value="${wsdl.cs.compile}"/>
            <arg value="${wsdl.cs.path}/UserService.wsdl"/>
            <classpath>
                <path refid="dependencies"/>
            </classpath>
        </java>
    </target>
    -->

    <!-- Creates a new jive specific clearspace WSDL jar -->
    <!-- =======================================================================================
    // this was replaced by an SBS client WS jar generated in custom SBS build...
    <target name="wsdl-clearspace-jar" depends="wsdl-clearspace"
            description="Creates a new jive-wsdl-clearspace.jar from the WSDL file">
        <!-/- compile java classes generated from the wsdl file -/-/>
        <copy file="${src.java.dir}/org/jivesoftware/webservices/ServiceProvider.java" todir="${wsdl.cs.compile}/org/jivesoftware/webservices/"/>
        <javac
                includes="com/jivesofware/**/*.java,org/jivesoftware/webservices/ServiceProvider.java"
                destdir="${wsdl.cs.compile}"
                includeAntRuntime="no"
                debug="on"
                nowarn="true"
                source="1.8">
            <src path="${wsdl.cs.compile}"/>
            <classpath>
                <path refid="dependencies"/>
            </classpath>
        </javac>

        <!-/- combine into one jar file -/-/>
        <jar destfile="${target.dir}/${wsdl.cs.jar.name}.jar">
            <fileset dir="${wsdl.cs.compile}">
                <include name="org/jivesoftware/**/*.*"/>
                <include name="com/jivesoftware/**/*.*"/>
            </fileset>
        </jar>
    </target>
    -->


    <!-- compile =============================================================================== -->
    <target name="compile" depends="init">
        <mkdir dir="${target.classes.dir}" />
        <javac srcdir="${src.java.dir}" 
                destdir="${target.classes.dir}"
                debug="on"
                source="1.8"
                classpathref="dependencies" />
    </target>

    <!-- jspc ================================================================================== -->
    <target name="jspc" depends="compile" description="Compiles all JSP pages.">
        <mkdir dir="${jspc.dest.dir}" />
        <mkdir dir="${jspc.java.dest.dir}" />
        <mkdir dir="${jspc.classes.dest.dir}" />

        <antcall target="-jspc-impl" />

        </target><target name="-jspc-impl" unless="no.jspc">
        <!-- Have to use Tomcat 5's JspC task, not the default Ant one -->
        <taskdef classname="org.apache.jasper.JspC" name="jasper2" >
            <classpath id="jspc.classpath">
                <pathelement location="${java.home}/../lib/tools.jar" />
                <path refid="jspc.dependencies" />
            </classpath>
        </taskdef>

        <!-- JSP to JAVA -->
        <jasper2
            validateXml="false"
            uriroot="${web.dir}"
            outputDir="${jspc.java.dest.dir}"
            package="org.igniterealtime.site"
            webXmlFragment="${jspc.dest.dir}/web.partial.xml" />

        <!-- Compile java source -->
        <javac
            destdir="${jspc.classes.dest.dir}"
            includeAntRuntime="no"
            debug="on"
            source="1.8"
            includes="org/igniterealtime/site/**/*.java"
        >
            <src path="${jspc.java.dest.dir}" />
            <classpath>
                <path refid="jspc.dependencies" />
            </classpath>
        </javac>

    </target>

    <!-- war =================================================================================== -->
    <target name="war" depends="jspc" description="Creates a WAR of the site.">
		<copy todir="${target.classes.dir}">
			<fileset dir="${src.java.dir}">
				<exclude name="WEB-INF/**/*.java" />
			</fileset>
		</copy>

		<war warfile="${target.dir}/${war.name}"
            webxml="${web.dir}/WEB-INF/web.xml"
        >
            <classes dir="${target.classes.dir}" />
            <lib dir="${web.dir}/WEB-INF/lib" includes="*.jar" />
            <fileset dir="${web.dir}">
                <include name="**/*.*" />
                <exclude name="WEB-INF/**/*.*" />
                <exclude name="**/*.iml" />
            </fileset>
            <fileset dir="${web.dir}">
                <include name="WEB-INF/*.tld" />
                <include name="WEB-INF/*.xml" />
            </fileset>
            <fileset dir="${web.dir}">
                <include name="WEB-INF/tags/*.*" />
            </fileset>
        </war>
    </target>

    <!-- deploywar ============================================================================= -->
    <target name="deploywar" depends="war" description="Deploys the WAR to a specified dir.">
        <copy todir="${deploy.dir}/.." overwrite="${overwrite}" file="${target.dir}/${war.name}" />
    </target>

    <!-- deployjsp ============================================================================= -->
    <target name="deployjsp" depends="war" description="Copies just the JSP to a specified dir.">
        <!-- All web files, no WEB-INF stuff -->
        <copy todir="${deploy.dir}" overwrite="${overwrite}">
            <fileset dir="${web.dir}">
                <include name="**/*.jsp" />
                <include name="**/*.gif" />
                <include name="**/*.css" />
                <include name="**/*.pdf" />
                <include name="**/*.js" />
                <include name="**/*.html" />
                <include name="**/*.png" />
                <include name="**/*.txt" />
                <include name="**/*.jspf" />
                <include name="**/*.xsl" />
                <include name="**/*.xml" />
                <include name="**/*.tld" />
                <include name="**/*.jar" />
                <include name="**/*.war" />
                <include name="**/*.swf" />
                <include name="**/*.ico" />
                <exclude name="WEB-INF/**/*.*" />
            </fileset>
        </copy>
        <!-- Special include just for xml files in WEB-INF/classes -->
        <copy todir="${deploy.dir}" overwrite="${overwrite}">
            <fileset dir="${web.dir}">
                <include name="WEB-INF/classes/*.xml" />
            </fileset>
        </copy>
    </target>

    <!-- deployapp ============================================================================= -->
    <target name="deployapp" depends="war" description="Deploys exploded war to a specified dir.">
        <unwar src="${target.dir}/${war.name}" dest="${deploy.dir}" overwrite="${overwrite}" />
    </target>

    <!-- clean ================================================================================= -->
    <target name="clean" description="Cleans up all build-generated output">
        <delete dir="${target.dir}" />
        <delete dir="${wsdl.cs.compile}"/>
    </target>

    <!-- clean-jspc ============================================================================ -->
    <target name="clean-jspc" description="Cleans all JSPC output">
        <delete dir="${jspc.dest.dir}" />
    </target>

    <!-- csx-deploy ============================================================================ -->
    <target name="sbs-theme-deploy" description="Deploys jiveHome files">
        <copy todir="${sbs.themes}" overwrite="${overwrite}">
            <fileset dir="${jive.home.src}"/>
        </copy>
    </target>

  
</project>
