<?xml version='1.0' encoding='UTF-8'?><wsdl:definitions name="GroupService" targetNamespace="http://jivesoftware.com/clearspace/webservices" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://jivesoftware.com/clearspace/webservices" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://jivesoftware.com/clearspace/webservices" xmlns="http://jivesoftware.com/clearspace/webservices" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:complexType name="User">
<xs:sequence>
<xs:element minOccurs="0" name="creationDate" type="xs:dateTime" />
<xs:element minOccurs="0" name="email" type="xs:string" />
<xs:element name="emailVisible" type="xs:boolean" />
<xs:element name="enabled" type="xs:boolean" />
<xs:element name="ID" type="xs:long" />
<xs:element minOccurs="0" name="modificationDate" type="xs:dateTime" />
<xs:element minOccurs="0" name="name" type="xs:string" />
<xs:element name="nameVisible" type="xs:boolean" />
<xs:element minOccurs="0" name="password" type="xs:string" />
<xs:element minOccurs="0" name="username" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:complexType name="Property">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string" />
<xs:element minOccurs="0" name="value" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:complexType name="Group">
<xs:complexContent>
<xs:extension base="JiveObject">
<xs:sequence>
<xs:element minOccurs="0" name="creationDate" type="xs:dateTime" />
<xs:element minOccurs="0" name="description" type="xs:string" />
<xs:element name="memberCount" type="xs:int" />
<xs:element minOccurs="0" name="modificationDate" type="xs:dateTime" />
<xs:element minOccurs="0" name="name" type="xs:string" />
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="JiveObject">
<xs:sequence>
<xs:element name="ID" type="xs:long" />
<xs:element name="objectType" type="xs:int" />
</xs:sequence>
</xs:complexType>
<xs:element name="GroupNotFound" type="GroupNotFound" />
<xs:complexType name="GroupNotFound">
<xs:sequence />
</xs:complexType>
<xs:element name="UserNotFound" type="UserNotFound" />
<xs:complexType name="UserNotFound">
<xs:sequence>
<xs:element name="username" nillable="true" type="xs:string" />
<xs:element name="userID" nillable="true" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="GroupAlreadyExistsException" type="GroupAlreadyExistsException" />
<xs:complexType name="GroupAlreadyExistsException">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroupMembers" type="getGroupMembers" />
<xs:complexType name="getGroupMembers">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupMembersResponse" type="getGroupMembersResponse" />
<xs:complexType name="getGroupMembersResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="User" />
</xs:sequence>
</xs:complexType>
<xs:element name="getAdministratorCount" type="getAdministratorCount" />
<xs:complexType name="getAdministratorCount">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getAdministratorCountResponse" type="getAdministratorCountResponse" />
<xs:complexType name="getAdministratorCountResponse">
<xs:sequence>
<xs:element name="return" type="xs:int" />
</xs:sequence>
</xs:complexType>
<xs:element name="removeMemberFromGroup" type="removeMemberFromGroup" />
<xs:complexType name="removeMemberFromGroup">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="removeMemberFromGroupResponse" type="removeMemberFromGroupResponse" />
<xs:complexType name="removeMemberFromGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="isReadOnly" type="isReadOnly" />
<xs:complexType name="isReadOnly">
<xs:sequence />
</xs:complexType>
<xs:element name="isReadOnlyResponse" type="isReadOnlyResponse" />
<xs:complexType name="isReadOnlyResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean" />
</xs:sequence>
</xs:complexType>
<xs:element name="getProperties" type="getProperties" />
<xs:complexType name="getProperties">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getPropertiesResponse" type="getPropertiesResponse" />
<xs:complexType name="getPropertiesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="Property" />
</xs:sequence>
</xs:complexType>
<xs:element name="deleteGroup" type="deleteGroup" />
<xs:complexType name="deleteGroup">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="deleteGroupResponse" type="deleteGroupResponse" />
<xs:complexType name="deleteGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="updateGroup" type="updateGroup" />
<xs:complexType name="updateGroup">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="Group" />
</xs:sequence>
</xs:complexType>
<xs:element name="updateGroupResponse" type="updateGroupResponse" />
<xs:complexType name="updateGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroupByName" type="getGroupByName" />
<xs:complexType name="getGroupByName">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupByNameResponse" type="getGroupByNameResponse" />
<xs:complexType name="getGroupByNameResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="Group" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupAdmins" type="getGroupAdmins" />
<xs:complexType name="getGroupAdmins">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupAdminsResponse" type="getGroupAdminsResponse" />
<xs:complexType name="getGroupAdminsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="User" />
</xs:sequence>
</xs:complexType>
<xs:element name="createGroup" type="createGroup" />
<xs:complexType name="createGroup">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string" />
<xs:element minOccurs="0" name="description" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:element name="createGroupResponse" type="createGroupResponse" />
<xs:complexType name="createGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="Group" />
</xs:sequence>
</xs:complexType>
<xs:element name="addAdministratorToGroup" type="addAdministratorToGroup" />
<xs:complexType name="addAdministratorToGroup">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="addAdministratorToGroupResponse" type="addAdministratorToGroupResponse" />
<xs:complexType name="addAdministratorToGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroups" type="getGroups" />
<xs:complexType name="getGroups">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroupsResponse" type="getGroupsResponse" />
<xs:complexType name="getGroupsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="Group" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupNamesBounded" type="getGroupNamesBounded" />
<xs:complexType name="getGroupNamesBounded">
<xs:sequence>
<xs:element name="startIndex" type="xs:int" />
<xs:element name="numResults" type="xs:int" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupNamesBoundedResponse" type="getGroupNamesBoundedResponse" />
<xs:complexType name="getGroupNamesBoundedResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupNames" type="getGroupNames" />
<xs:complexType name="getGroupNames">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroupNamesResponse" type="getGroupNamesResponse" />
<xs:complexType name="getGroupNamesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupCount" type="getGroupCount" />
<xs:complexType name="getGroupCount">
<xs:sequence />
</xs:complexType>
<xs:element name="getGroupCountResponse" type="getGroupCountResponse" />
<xs:complexType name="getGroupCountResponse">
<xs:sequence>
<xs:element name="return" type="xs:int" />
</xs:sequence>
</xs:complexType>
<xs:element name="setProperty" type="setProperty" />
<xs:complexType name="setProperty">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string" />
<xs:element minOccurs="0" name="value" type="xs:string" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="setPropertyResponse" type="setPropertyResponse" />
<xs:complexType name="setPropertyResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="getUserGroups" type="getUserGroups" />
<xs:complexType name="getUserGroups">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getUserGroupsResponse" type="getUserGroupsResponse" />
<xs:complexType name="getUserGroupsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="Group" />
</xs:sequence>
</xs:complexType>
<xs:element name="removeAdministratorFromGroup" type="removeAdministratorFromGroup" />
<xs:complexType name="removeAdministratorFromGroup">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="removeAdministratorFromGroupResponse" type="removeAdministratorFromGroupResponse" />
<xs:complexType name="removeAdministratorFromGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="deleteProperty" type="deleteProperty" />
<xs:complexType name="deleteProperty">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="deletePropertyResponse" type="deletePropertyResponse" />
<xs:complexType name="deletePropertyResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="addMemberToGroup" type="addMemberToGroup" />
<xs:complexType name="addMemberToGroup">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="addMemberToGroupResponse" type="addMemberToGroupResponse" />
<xs:complexType name="addMemberToGroupResponse">
<xs:sequence />
</xs:complexType>
<xs:element name="getUserGroupNames" type="getUserGroupNames" />
<xs:complexType name="getUserGroupNames">
<xs:sequence>
<xs:element name="userID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getUserGroupNamesResponse" type="getUserGroupNamesResponse" />
<xs:complexType name="getUserGroupNamesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroup" type="getGroup" />
<xs:complexType name="getGroup">
<xs:sequence>
<xs:element name="groupID" type="xs:long" />
</xs:sequence>
</xs:complexType>
<xs:element name="getGroupResponse" type="getGroupResponse" />
<xs:complexType name="getGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="Group" />
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="GroupAlreadyExistsException">
    <wsdl:part element="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupMembers">
    <wsdl:part element="tns:getGroupMembers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupByName">
    <wsdl:part element="tns:getGroupByName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPropertyResponse">
    <wsdl:part element="tns:setPropertyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMemberToGroup">
    <wsdl:part element="tns:addMemberToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsResponse">
    <wsdl:part element="tns:getGroupsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupByNameResponse">
    <wsdl:part element="tns:getGroupByNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setProperty">
    <wsdl:part element="tns:setProperty" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProperties">
    <wsdl:part element="tns:getProperties" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupNamesBounded">
    <wsdl:part element="tns:getGroupNamesBounded" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadOnlyResponse">
    <wsdl:part element="tns:isReadOnlyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupNamesBoundedResponse">
    <wsdl:part element="tns:getGroupNamesBoundedResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAdministratorCountResponse">
    <wsdl:part element="tns:getAdministratorCountResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupNamesResponse">
    <wsdl:part element="tns:getGroupNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroups">
    <wsdl:part element="tns:getGroups" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroupsResponse">
    <wsdl:part element="tns:getUserGroupsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupNotFoundException">
    <wsdl:part element="tns:GroupNotFound" name="GroupNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeMemberFromGroup">
    <wsdl:part element="tns:removeMemberFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAdministratorToGroup">
    <wsdl:part element="tns:addAdministratorToGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeMemberFromGroupResponse">
    <wsdl:part element="tns:removeMemberFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupResponse">
    <wsdl:part element="tns:updateGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGroupResponse">
    <wsdl:part element="tns:createGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroupNamesResponse">
    <wsdl:part element="tns:getUserGroupNamesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAdministratorFromGroupResponse">
    <wsdl:part element="tns:removeAdministratorFromGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroups">
    <wsdl:part element="tns:getUserGroups" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupResponse">
    <wsdl:part element="tns:getGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deletePropertyResponse">
    <wsdl:part element="tns:deletePropertyResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupResponse">
    <wsdl:part element="tns:deleteGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProperty">
    <wsdl:part element="tns:deleteProperty" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupNames">
    <wsdl:part element="tns:getGroupNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroupNames">
    <wsdl:part element="tns:getUserGroupNames" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserNotFoundException">
    <wsdl:part element="tns:UserNotFound" name="UserNotFoundException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAdministratorToGroupResponse">
    <wsdl:part element="tns:addAdministratorToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAdministratorCount">
    <wsdl:part element="tns:getAdministratorCount" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupMembersResponse">
    <wsdl:part element="tns:getGroupMembersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getPropertiesResponse">
    <wsdl:part element="tns:getPropertiesResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroup">
    <wsdl:part element="tns:updateGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupAdmins">
    <wsdl:part element="tns:getGroupAdmins" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAdministratorFromGroup">
    <wsdl:part element="tns:removeAdministratorFromGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupAdminsResponse">
    <wsdl:part element="tns:getGroupAdminsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isReadOnly">
    <wsdl:part element="tns:isReadOnly" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroup">
    <wsdl:part element="tns:getGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroup">
    <wsdl:part element="tns:deleteGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupCountResponse">
    <wsdl:part element="tns:getGroupCountResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMemberToGroupResponse">
    <wsdl:part element="tns:addMemberToGroupResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGroup">
    <wsdl:part element="tns:createGroup" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupCount">
    <wsdl:part element="tns:getGroupCount" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="GroupService">
    <wsdl:operation name="getGroupMembers">
      <wsdl:input message="tns:getGroupMembers" name="getGroupMembers">
    </wsdl:input>
      <wsdl:output message="tns:getGroupMembersResponse" name="getGroupMembersResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdministratorCount">
      <wsdl:input message="tns:getAdministratorCount" name="getAdministratorCount">
    </wsdl:input>
      <wsdl:output message="tns:getAdministratorCountResponse" name="getAdministratorCountResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeMemberFromGroup">
      <wsdl:input message="tns:removeMemberFromGroup" name="removeMemberFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:removeMemberFromGroupResponse" name="removeMemberFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <wsdl:input message="tns:isReadOnly" name="isReadOnly">
    </wsdl:input>
      <wsdl:output message="tns:isReadOnlyResponse" name="isReadOnlyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <wsdl:input message="tns:getProperties" name="getProperties">
    </wsdl:input>
      <wsdl:output message="tns:getPropertiesResponse" name="getPropertiesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <wsdl:input message="tns:deleteGroup" name="deleteGroup">
    </wsdl:input>
      <wsdl:output message="tns:deleteGroupResponse" name="deleteGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <wsdl:input message="tns:updateGroup" name="updateGroup">
    </wsdl:input>
      <wsdl:output message="tns:updateGroupResponse" name="updateGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupByName">
      <wsdl:input message="tns:getGroupByName" name="getGroupByName">
    </wsdl:input>
      <wsdl:output message="tns:getGroupByNameResponse" name="getGroupByNameResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupAdmins">
      <wsdl:input message="tns:getGroupAdmins" name="getGroupAdmins">
    </wsdl:input>
      <wsdl:output message="tns:getGroupAdminsResponse" name="getGroupAdminsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGroup">
      <wsdl:input message="tns:createGroup" name="createGroup">
    </wsdl:input>
      <wsdl:output message="tns:createGroupResponse" name="createGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAdministratorToGroup">
      <wsdl:input message="tns:addAdministratorToGroup" name="addAdministratorToGroup">
    </wsdl:input>
      <wsdl:output message="tns:addAdministratorToGroupResponse" name="addAdministratorToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroups">
      <wsdl:input message="tns:getGroups" name="getGroups">
    </wsdl:input>
      <wsdl:output message="tns:getGroupsResponse" name="getGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupNamesBounded">
      <wsdl:input message="tns:getGroupNamesBounded" name="getGroupNamesBounded">
    </wsdl:input>
      <wsdl:output message="tns:getGroupNamesBoundedResponse" name="getGroupNamesBoundedResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupNames">
      <wsdl:input message="tns:getGroupNames" name="getGroupNames">
    </wsdl:input>
      <wsdl:output message="tns:getGroupNamesResponse" name="getGroupNamesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupCount">
      <wsdl:input message="tns:getGroupCount" name="getGroupCount">
    </wsdl:input>
      <wsdl:output message="tns:getGroupCountResponse" name="getGroupCountResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <wsdl:input message="tns:setProperty" name="setProperty">
    </wsdl:input>
      <wsdl:output message="tns:setPropertyResponse" name="setPropertyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserGroups">
      <wsdl:input message="tns:getUserGroups" name="getUserGroups">
    </wsdl:input>
      <wsdl:output message="tns:getUserGroupsResponse" name="getUserGroupsResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAdministratorFromGroup">
      <wsdl:input message="tns:removeAdministratorFromGroup" name="removeAdministratorFromGroup">
    </wsdl:input>
      <wsdl:output message="tns:removeAdministratorFromGroupResponse" name="removeAdministratorFromGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProperty">
      <wsdl:input message="tns:deleteProperty" name="deleteProperty">
    </wsdl:input>
      <wsdl:output message="tns:deletePropertyResponse" name="deletePropertyResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMemberToGroup">
      <wsdl:input message="tns:addMemberToGroup" name="addMemberToGroup">
    </wsdl:input>
      <wsdl:output message="tns:addMemberToGroupResponse" name="addMemberToGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
      <wsdl:fault message="tns:GroupAlreadyExistsException" name="GroupAlreadyExistsException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserGroupNames">
      <wsdl:input message="tns:getUserGroupNames" name="getUserGroupNames">
    </wsdl:input>
      <wsdl:output message="tns:getUserGroupNamesResponse" name="getUserGroupNamesResponse">
    </wsdl:output>
      <wsdl:fault message="tns:UserNotFoundException" name="UserNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdl:input message="tns:getGroup" name="getGroup">
    </wsdl:input>
      <wsdl:output message="tns:getGroupResponse" name="getGroupResponse">
    </wsdl:output>
      <wsdl:fault message="tns:GroupNotFoundException" name="GroupNotFoundException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GroupServiceSoapBinding" type="tns:GroupService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="getGroupMembers">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupMembers">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupMembersResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAdministratorCount">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getAdministratorCount">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getAdministratorCountResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeMemberFromGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="removeMemberFromGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="removeMemberFromGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isReadOnly">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="isReadOnly">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="isReadOnlyResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="deleteGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deleteGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProperties">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getProperties">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getPropertiesResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="updateGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="updateGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupAdmins">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupAdmins">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupAdminsResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroupByName">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupByName">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupByNameResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="createGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addAdministratorToGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="addAdministratorToGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="addAdministratorToGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroups">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroups">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupsResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupNamesBounded">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupNamesBounded">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupNamesBoundedResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupCount">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupCount">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupCountResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupNames">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroupNames">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupNamesResponse">
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserGroups">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getUserGroups">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getUserGroupsResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setProperty">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="setProperty">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="setPropertyResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProperty">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="deleteProperty">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deletePropertyResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeAdministratorFromGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="removeAdministratorFromGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="removeAdministratorFromGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMemberToGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="addMemberToGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="addMemberToGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
      <wsdl:fault name="GroupAlreadyExistsException">
        <soap:fault name="GroupAlreadyExistsException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserGroupNames">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getUserGroupNames">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getUserGroupNamesResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="UserNotFoundException">
        <soap:fault name="UserNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getGroup">
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <soap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="GroupNotFoundException">
        <soap:fault name="GroupNotFoundException" use="literal" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GroupService">
    <wsdl:port binding="tns:GroupServiceSoapBinding" name="GroupServicePort">
      <soap:address location="http://j2ee.www.igniterealtime.org-community:8080/community/rpc/soap/GroupService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>